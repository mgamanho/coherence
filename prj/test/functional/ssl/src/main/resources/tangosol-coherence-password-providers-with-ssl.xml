<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2000, 2024, Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
  -->

<coherence  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="http://xmlns.oracle.com/coherence/coherence-operational-config"
            xsi:schemaLocation="http://xmlns.oracle.com/coherence/coherence-operational-config coherence-operational-config.xsd"
            xml-override="common/tangosol-coherence-override.xml">
    <cluster-config>
        <socket-providers>
            <socket-provider id="mySSLConfig">
                <ssl>
                    <protocol>TLS</protocol>
                    <identity-manager>
                        <algorithm>SunX509</algorithm>
                        <key-store>
                            <url>file:server.jks</url>
                            <!-- Method: Using an original password approach -->
                            <password>password</password>
                            <type>PKCS12</type>
                        </key-store>
                        <!-- Method: Using an inline password-provider with input params -->
                        <password-provider>
                            <class-name>ssl.GetPassword</class-name>
                            <init-params>
                                <init-param>
                                    <param-name>param_1</param-name>
                                    <param-value>password</param-value>
                                </init-param>
                            </init-params>
                        </password-provider>
                    </identity-manager>
                    <trust-manager>
                        <algorithm>SunX509</algorithm>
                        <key-store>
                            <url>file:trust.jks</url>
                            <!-- Method: Using the password-provider with overrides. -->
                            <password-provider>
                                <name>myDefault</name>
                                <init-params>
                                    <init-param>
                                        <param-name>param_1</param-name>
                                        <param-value>pass</param-value>
                                    </init-param>
                                </init-params>
                            </password-provider>
                            <type>PKCS12</type>
                        </key-store>
                    </trust-manager>
                    <socket-provider>tcp</socket-provider>
                </ssl>
            </socket-provider>
        </socket-providers>

        <password-providers>
            <password-provider id="trustMgrPass">
                <class-name>ssl.GetPassword</class-name>
                <init-params>
                    <init-param>
                        <param-name>param_1</param-name>
                        <param-value>password</param-value>
                    </init-param>
                </init-params>
            </password-provider>
            <password-provider id="identityMgrPass">
                <class-name>ssl.GetPassword</class-name>
                <init-params>
                    <init-param>
                        <param-name>param_1</param-name>
                        <param-value>password</param-value>
                    </init-param>
                </init-params>
            </password-provider>
            <password-provider id="myDefault">
                <class-name>ssl.GetPassword</class-name>
                <init-params>
                    <init-param>
                        <param-name>param_1</param-name>
                        <param-value>pass</param-value>
                    </init-param>
                    <init-param>
                        <param-name>param_2</param-name>
                        <param-value>word</param-value>
                    </init-param>
                </init-params>
            </password-provider>
        </password-providers>

    </cluster-config>

    <logging-config>
        <destination system-property="test.log">stdout</destination>
        <severity-level system-property="test.log.level">9</severity-level>
        <character-limit>0</character-limit>
    </logging-config>

</coherence>
