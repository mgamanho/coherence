<?xml version="1.0"?>
<!--
  Copyright (c) 2000, 2024, Oracle and/or its affiliates.

  Licensed under the Universal Permissive License v 1.0 as shown at
  https://oss.oracle.com/licenses/upl.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.oracle.coherence.ce</groupId>
    <artifactId>main</artifactId>
    <version>${revision}</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>coherence-json</artifactId>
  <name>Coherence JSON Library</name>

  <properties>
    <module.name>com.oracle.coherence.json</module.name>

    <!--  this module should be published -->
    <maven.deploy.skip>false</maven.deploy.skip>

    <surefire.modules.argline>
      ${default.surefire.modules.argline}
      --add-opens java.base/java.lang=ALL-UNNAMED
    </surefire.modules.argline>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>jakarta.json.bind</groupId>
      <artifactId>jakarta.json.bind-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.json</groupId>
      <artifactId>jakarta.json-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.inject</groupId>
      <artifactId>jakarta.inject-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
      <scope>provided</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>jakarta.json</artifactId>
      <classifier>module</classifier>
      <scope>test</scope>
    </dependency>

    <!-- test dependencies (this will pull in things like JUnit, Mockito etc...) -->
    <dependency>
      <groupId>${coherence.group.id}</groupId>
      <artifactId>coherence-testing-support</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- maven-bundle-pugin for generating manifest with metadata -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
      </plugin>

      <!-- maven-jar-plugin with configuration to package generated MANIFEST.MF to project jar -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>

      <!-- run integration tests *Tests.java and *IT.java -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <!-- run integration tests *Test.java -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <reuseForks>false</reuseForks>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <id>shade</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>false</shadedArtifactAttached>
              <createDependencyReducedPom>true</createDependencyReducedPom>
              <useDependencyReducedPomInJar>true</useDependencyReducedPomInJar>
              <artifactSet>
                <includes>
                  <include>org.ow2.asm:asm</include>
                  <include>org.ow2.asm:asm-commons</include>
                  <include>org.ow2.asm:asm-tree</include>
                  <include>org.ow2.asm:asm-util</include>
                </includes>
              </artifactSet>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>module-info*</exclude>
                    <exclude>META-INF/maven/**/*</exclude>
                    <exclude>build.properties</exclude>
                  </excludes>
                </filter>
              </filters>
              <relocations>
                <relocation>
                  <pattern>org.objectweb.asm</pattern>
                  <shadedPattern>com.oracle.coherence.json.internal.asm</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.objectweb.asm.commons</pattern>
                  <shadedPattern>com.oracle.coherence.json.internal.asm.commons</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.objectweb.asm.tree</pattern>
                  <shadedPattern>com.oracle.coherence.json.internal.asm.tree</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.objectweb.asm.util</pattern>
                  <shadedPattern>com.oracle.coherence.json.internal.asm.util</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- flatten plugin MUST come after the shade plugin -->
      <!-- flatten POM to remove build-specific content -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <executions>
            <execution>
                <id>flatten</id>
                <phase>package</phase>
                <goals>
                    <goal>flatten</goal>
                </goals>
            </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <configuration>
          <excludePackageNames>com.oracle.coherence.io.json.internal.*:com.oracle.coherence.io.json.genson.reflect.*</excludePackageNames>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.oracle.coherence.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-module-info</id>
            <phase>package</phase>
            <goals>
              <goal>add-module-info</goal>
            </goals>
            <configuration>
              <module>
                <moduleInfo>
                  <name>${module.name}</name>
                  <open>true</open>
                  <exports>
                    !*.internal.*;
                    !com.oracle.coherence.io.json.internal;
                    !com.oracle.coherence.io.json.genson.reflect;
                    *;
                  </exports>
                  <addServiceUses>true</addServiceUses>
                </moduleInfo>
              </module>
              <overwriteExistingFiles>true</overwriteExistingFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
